// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MyEngineMessage.proto

#include "MyEngineMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace LoginMessage {
PROTOBUF_CONSTEXPR Name_Repeat_Check::Name_Repeat_Check(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Name_Repeat_CheckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Name_Repeat_CheckDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Name_Repeat_CheckDefaultTypeInternal() {}
  union {
    Name_Repeat_Check _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Name_Repeat_CheckDefaultTypeInternal _Name_Repeat_Check_default_instance_;
PROTOBUF_CONSTEXPR Name_Repeat_Repost::Name_Repeat_Repost(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Name_Repeat_RepostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Name_Repeat_RepostDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Name_Repeat_RepostDefaultTypeInternal() {}
  union {
    Name_Repeat_Repost _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Name_Repeat_RepostDefaultTypeInternal _Name_Repeat_Repost_default_instance_;
PROTOBUF_CONSTEXPR Number_Repeat_Chexk::Number_Repeat_Chexk(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Number_Repeat_ChexkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Number_Repeat_ChexkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Number_Repeat_ChexkDefaultTypeInternal() {}
  union {
    Number_Repeat_Chexk _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Number_Repeat_ChexkDefaultTypeInternal _Number_Repeat_Chexk_default_instance_;
PROTOBUF_CONSTEXPR Number_Repeat_Repost::Number_Repeat_Repost(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Number_Repeat_RepostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Number_Repeat_RepostDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Number_Repeat_RepostDefaultTypeInternal() {}
  union {
    Number_Repeat_Repost _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Number_Repeat_RepostDefaultTypeInternal _Number_Repeat_Repost_default_instance_;
PROTOBUF_CONSTEXPR Email_Repeat_Chexk::Email_Repeat_Chexk(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Email_Repeat_ChexkDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Email_Repeat_ChexkDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Email_Repeat_ChexkDefaultTypeInternal() {}
  union {
    Email_Repeat_Chexk _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Email_Repeat_ChexkDefaultTypeInternal _Email_Repeat_Chexk_default_instance_;
PROTOBUF_CONSTEXPR Email_Repeat_Repost::Email_Repeat_Repost(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Email_Repeat_RepostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Email_Repeat_RepostDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Email_Repeat_RepostDefaultTypeInternal() {}
  union {
    Email_Repeat_Repost _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Email_Repeat_RepostDefaultTypeInternal _Email_Repeat_Repost_default_instance_;
PROTOBUF_CONSTEXPR Register_Request::Register_Request(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.number_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Register_RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Register_RequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Register_RequestDefaultTypeInternal() {}
  union {
    Register_Request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Register_RequestDefaultTypeInternal _Register_Request_default_instance_;
PROTOBUF_CONSTEXPR Register_Repost::Register_Repost(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Register_RepostDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Register_RepostDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Register_RepostDefaultTypeInternal() {}
  union {
    Register_Repost _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Register_RepostDefaultTypeInternal _Register_Repost_default_instance_;
PROTOBUF_CONSTEXPR MainMessage::MainMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.content_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct MainMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MainMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MainMessageDefaultTypeInternal() {}
  union {
    MainMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MainMessageDefaultTypeInternal _MainMessage_default_instance_;
}  // namespace LoginMessage
static ::_pb::Metadata file_level_metadata_MyEngineMessage_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_MyEngineMessage_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_MyEngineMessage_2eproto = nullptr;

const uint32_t TableStruct_MyEngineMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Name_Repeat_Check, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Name_Repeat_Check, _impl_.name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Name_Repeat_Repost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Name_Repeat_Repost, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Name_Repeat_Repost, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Number_Repeat_Chexk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Number_Repeat_Chexk, _impl_.number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Number_Repeat_Repost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Number_Repeat_Repost, _impl_.number_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Number_Repeat_Repost, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Email_Repeat_Chexk, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Email_Repeat_Chexk, _impl_.email_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Email_Repeat_Repost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Email_Repeat_Repost, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Email_Repeat_Repost, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Request, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Request, _impl_.number_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Request, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Request, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Repost, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Repost, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::LoginMessage::Register_Repost, _impl_.state_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::MainMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::MainMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::LoginMessage::MainMessage, _impl_.type_),
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::LoginMessage::MainMessage, _impl_.content_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::LoginMessage::Name_Repeat_Check)},
  { 7, -1, -1, sizeof(::LoginMessage::Name_Repeat_Repost)},
  { 15, -1, -1, sizeof(::LoginMessage::Number_Repeat_Chexk)},
  { 22, -1, -1, sizeof(::LoginMessage::Number_Repeat_Repost)},
  { 30, -1, -1, sizeof(::LoginMessage::Email_Repeat_Chexk)},
  { 37, -1, -1, sizeof(::LoginMessage::Email_Repeat_Repost)},
  { 45, -1, -1, sizeof(::LoginMessage::Register_Request)},
  { 55, -1, -1, sizeof(::LoginMessage::Register_Repost)},
  { 63, -1, -1, sizeof(::LoginMessage::MainMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::LoginMessage::_Name_Repeat_Check_default_instance_._instance,
  &::LoginMessage::_Name_Repeat_Repost_default_instance_._instance,
  &::LoginMessage::_Number_Repeat_Chexk_default_instance_._instance,
  &::LoginMessage::_Number_Repeat_Repost_default_instance_._instance,
  &::LoginMessage::_Email_Repeat_Chexk_default_instance_._instance,
  &::LoginMessage::_Email_Repeat_Repost_default_instance_._instance,
  &::LoginMessage::_Register_Request_default_instance_._instance,
  &::LoginMessage::_Register_Repost_default_instance_._instance,
  &::LoginMessage::_MainMessage_default_instance_._instance,
};

const char descriptor_table_protodef_MyEngineMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025MyEngineMessage.proto\022\014LoginMessage\"!\n"
  "\021Name_Repeat_Check\022\014\n\004name\030\001 \001(\014\"1\n\022Name"
  "_Repeat_Repost\022\014\n\004name\030\001 \001(\014\022\r\n\005state\030\002 "
  "\001(\010\"%\n\023Number_Repeat_Chexk\022\016\n\006number\030\001 \001"
  "(\014\"5\n\024Number_Repeat_Repost\022\016\n\006number\030\001 \001"
  "(\014\022\r\n\005state\030\002 \001(\010\"#\n\022Email_Repeat_Chexk\022"
  "\r\n\005email\030\001 \001(\014\"3\n\023Email_Repeat_Repost\022\r\n"
  "\005email\030\001 \001(\014\022\r\n\005state\030\002 \001(\010\"Q\n\020Register_"
  "Request\022\014\n\004name\030\001 \001(\014\022\016\n\006number\030\002 \001(\014\022\r\n"
  "\005email\030\003 \001(\014\022\020\n\010password\030\004 \001(\014\".\n\017Regist"
  "er_Repost\022\014\n\004name\030\001 \001(\014\022\r\n\005state\030\002 \001(\010\"\357"
  "\003\n\013MainMessage\022\'\n\004type\030\001 \001(\0162\031.LoginMess"
  "age.MessageType\0223\n\010content1\030\002 \001(\0132\037.Logi"
  "nMessage.Name_Repeat_CheckH\000\0224\n\010content2"
  "\030\003 \001(\0132 .LoginMessage.Name_Repeat_Repost"
  "H\000\0225\n\010content3\030\004 \001(\0132!.LoginMessage.Numb"
  "er_Repeat_ChexkH\000\0226\n\010content4\030\005 \001(\0132\".Lo"
  "ginMessage.Number_Repeat_RepostH\000\0224\n\010con"
  "tent5\030\006 \001(\0132 .LoginMessage.Email_Repeat_"
  "ChexkH\000\0225\n\010content6\030\007 \001(\0132!.LoginMessage"
  ".Email_Repeat_RepostH\000\0222\n\010content7\030\010 \001(\013"
  "2\036.LoginMessage.Register_RequestH\000\0221\n\010co"
  "ntent8\030\t \001(\0132\035.LoginMessage.Register_Rep"
  "ostH\000B\t\n\007content*\313\001\n\013MessageType\022\025\n\021NAME"
  "_REPEAT_CHECK\020\000\022\026\n\022NAME_REPEAT_REPOST\020\001\022"
  "\027\n\023NUMBER_REPEAT_CHECK\020\002\022\030\n\024NUMBER_REPEA"
  "T_REPOST\020\003\022\026\n\022EMAIL_REPEAT_CHECK\020\004\022\027\n\023EM"
  "AIL_REPEAT_REPOST\020\005\022\024\n\020REGISTER_REQUEST\020"
  "\006\022\023\n\017REGISTER_REPOST\020\007b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_MyEngineMessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_MyEngineMessage_2eproto = {
    false, false, 1150, descriptor_table_protodef_MyEngineMessage_2eproto,
    "MyEngineMessage.proto",
    &descriptor_table_MyEngineMessage_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_MyEngineMessage_2eproto::offsets,
    file_level_metadata_MyEngineMessage_2eproto, file_level_enum_descriptors_MyEngineMessage_2eproto,
    file_level_service_descriptors_MyEngineMessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_MyEngineMessage_2eproto_getter() {
  return &descriptor_table_MyEngineMessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_MyEngineMessage_2eproto(&descriptor_table_MyEngineMessage_2eproto);
namespace LoginMessage {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MyEngineMessage_2eproto);
  return file_level_enum_descriptors_MyEngineMessage_2eproto[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Name_Repeat_Check::_Internal {
 public:
};

Name_Repeat_Check::Name_Repeat_Check(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Name_Repeat_Check)
}
Name_Repeat_Check::Name_Repeat_Check(const Name_Repeat_Check& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Name_Repeat_Check* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Name_Repeat_Check)
}

inline void Name_Repeat_Check::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Name_Repeat_Check::~Name_Repeat_Check() {
  // @@protoc_insertion_point(destructor:LoginMessage.Name_Repeat_Check)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Name_Repeat_Check::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void Name_Repeat_Check::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Name_Repeat_Check::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Name_Repeat_Check)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Name_Repeat_Check::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Name_Repeat_Check::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Name_Repeat_Check)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Name_Repeat_Check)
  return target;
}

size_t Name_Repeat_Check::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Name_Repeat_Check)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Name_Repeat_Check::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Name_Repeat_Check::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Name_Repeat_Check::GetClassData() const { return &_class_data_; }


void Name_Repeat_Check::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Name_Repeat_Check*>(&to_msg);
  auto& from = static_cast<const Name_Repeat_Check&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Name_Repeat_Check)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Name_Repeat_Check::CopyFrom(const Name_Repeat_Check& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Name_Repeat_Check)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Name_Repeat_Check::IsInitialized() const {
  return true;
}

void Name_Repeat_Check::InternalSwap(Name_Repeat_Check* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Name_Repeat_Check::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[0]);
}

// ===================================================================

class Name_Repeat_Repost::_Internal {
 public:
};

Name_Repeat_Repost::Name_Repeat_Repost(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Name_Repeat_Repost)
}
Name_Repeat_Repost::Name_Repeat_Repost(const Name_Repeat_Repost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Name_Repeat_Repost* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Name_Repeat_Repost)
}

inline void Name_Repeat_Repost::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.state_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Name_Repeat_Repost::~Name_Repeat_Repost() {
  // @@protoc_insertion_point(destructor:LoginMessage.Name_Repeat_Repost)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Name_Repeat_Repost::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void Name_Repeat_Repost::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Name_Repeat_Repost::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Name_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.state_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Name_Repeat_Repost::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Name_Repeat_Repost::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Name_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Name_Repeat_Repost)
  return target;
}

size_t Name_Repeat_Repost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Name_Repeat_Repost)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Name_Repeat_Repost::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Name_Repeat_Repost::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Name_Repeat_Repost::GetClassData() const { return &_class_data_; }


void Name_Repeat_Repost::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Name_Repeat_Repost*>(&to_msg);
  auto& from = static_cast<const Name_Repeat_Repost&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Name_Repeat_Repost)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Name_Repeat_Repost::CopyFrom(const Name_Repeat_Repost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Name_Repeat_Repost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Name_Repeat_Repost::IsInitialized() const {
  return true;
}

void Name_Repeat_Repost::InternalSwap(Name_Repeat_Repost* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Name_Repeat_Repost::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[1]);
}

// ===================================================================

class Number_Repeat_Chexk::_Internal {
 public:
};

Number_Repeat_Chexk::Number_Repeat_Chexk(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Number_Repeat_Chexk)
}
Number_Repeat_Chexk::Number_Repeat_Chexk(const Number_Repeat_Chexk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Number_Repeat_Chexk* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_number().empty()) {
    _this->_impl_.number_.Set(from._internal_number(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Number_Repeat_Chexk)
}

inline void Number_Repeat_Chexk::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Number_Repeat_Chexk::~Number_Repeat_Chexk() {
  // @@protoc_insertion_point(destructor:LoginMessage.Number_Repeat_Chexk)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Number_Repeat_Chexk::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.number_.Destroy();
}

void Number_Repeat_Chexk::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Number_Repeat_Chexk::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Number_Repeat_Chexk)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.number_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Number_Repeat_Chexk::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Number_Repeat_Chexk::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Number_Repeat_Chexk)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes number = 1;
  if (!this->_internal_number().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Number_Repeat_Chexk)
  return target;
}

size_t Number_Repeat_Chexk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Number_Repeat_Chexk)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes number = 1;
  if (!this->_internal_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Number_Repeat_Chexk::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Number_Repeat_Chexk::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Number_Repeat_Chexk::GetClassData() const { return &_class_data_; }


void Number_Repeat_Chexk::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Number_Repeat_Chexk*>(&to_msg);
  auto& from = static_cast<const Number_Repeat_Chexk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Number_Repeat_Chexk)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_number().empty()) {
    _this->_internal_set_number(from._internal_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Number_Repeat_Chexk::CopyFrom(const Number_Repeat_Chexk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Number_Repeat_Chexk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Number_Repeat_Chexk::IsInitialized() const {
  return true;
}

void Number_Repeat_Chexk::InternalSwap(Number_Repeat_Chexk* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.number_, lhs_arena,
      &other->_impl_.number_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Number_Repeat_Chexk::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[2]);
}

// ===================================================================

class Number_Repeat_Repost::_Internal {
 public:
};

Number_Repeat_Repost::Number_Repeat_Repost(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Number_Repeat_Repost)
}
Number_Repeat_Repost::Number_Repeat_Repost(const Number_Repeat_Repost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Number_Repeat_Repost* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_number().empty()) {
    _this->_impl_.number_.Set(from._internal_number(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Number_Repeat_Repost)
}

inline void Number_Repeat_Repost::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , decltype(_impl_.state_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Number_Repeat_Repost::~Number_Repeat_Repost() {
  // @@protoc_insertion_point(destructor:LoginMessage.Number_Repeat_Repost)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Number_Repeat_Repost::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.number_.Destroy();
}

void Number_Repeat_Repost::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Number_Repeat_Repost::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Number_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.number_.ClearToEmpty();
  _impl_.state_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Number_Repeat_Repost::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Number_Repeat_Repost::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Number_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes number = 1;
  if (!this->_internal_number().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_number(), target);
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Number_Repeat_Repost)
  return target;
}

size_t Number_Repeat_Repost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Number_Repeat_Repost)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes number = 1;
  if (!this->_internal_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_number());
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Number_Repeat_Repost::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Number_Repeat_Repost::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Number_Repeat_Repost::GetClassData() const { return &_class_data_; }


void Number_Repeat_Repost::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Number_Repeat_Repost*>(&to_msg);
  auto& from = static_cast<const Number_Repeat_Repost&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Number_Repeat_Repost)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_number().empty()) {
    _this->_internal_set_number(from._internal_number());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Number_Repeat_Repost::CopyFrom(const Number_Repeat_Repost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Number_Repeat_Repost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Number_Repeat_Repost::IsInitialized() const {
  return true;
}

void Number_Repeat_Repost::InternalSwap(Number_Repeat_Repost* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.number_, lhs_arena,
      &other->_impl_.number_, rhs_arena
  );
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Number_Repeat_Repost::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[3]);
}

// ===================================================================

class Email_Repeat_Chexk::_Internal {
 public:
};

Email_Repeat_Chexk::Email_Repeat_Chexk(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Email_Repeat_Chexk)
}
Email_Repeat_Chexk::Email_Repeat_Chexk(const Email_Repeat_Chexk& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Email_Repeat_Chexk* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Email_Repeat_Chexk)
}

inline void Email_Repeat_Chexk::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Email_Repeat_Chexk::~Email_Repeat_Chexk() {
  // @@protoc_insertion_point(destructor:LoginMessage.Email_Repeat_Chexk)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Email_Repeat_Chexk::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
}

void Email_Repeat_Chexk::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Email_Repeat_Chexk::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Email_Repeat_Chexk)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Email_Repeat_Chexk::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Email_Repeat_Chexk::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Email_Repeat_Chexk)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes email = 1;
  if (!this->_internal_email().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_email(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Email_Repeat_Chexk)
  return target;
}

size_t Email_Repeat_Chexk::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Email_Repeat_Chexk)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_email());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Email_Repeat_Chexk::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Email_Repeat_Chexk::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Email_Repeat_Chexk::GetClassData() const { return &_class_data_; }


void Email_Repeat_Chexk::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Email_Repeat_Chexk*>(&to_msg);
  auto& from = static_cast<const Email_Repeat_Chexk&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Email_Repeat_Chexk)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Email_Repeat_Chexk::CopyFrom(const Email_Repeat_Chexk& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Email_Repeat_Chexk)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Email_Repeat_Chexk::IsInitialized() const {
  return true;
}

void Email_Repeat_Chexk::InternalSwap(Email_Repeat_Chexk* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Email_Repeat_Chexk::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[4]);
}

// ===================================================================

class Email_Repeat_Repost::_Internal {
 public:
};

Email_Repeat_Repost::Email_Repeat_Repost(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Email_Repeat_Repost)
}
Email_Repeat_Repost::Email_Repeat_Repost(const Email_Repeat_Repost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Email_Repeat_Repost* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Email_Repeat_Repost)
}

inline void Email_Repeat_Repost::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.state_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Email_Repeat_Repost::~Email_Repeat_Repost() {
  // @@protoc_insertion_point(destructor:LoginMessage.Email_Repeat_Repost)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Email_Repeat_Repost::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
}

void Email_Repeat_Repost::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Email_Repeat_Repost::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Email_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.state_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Email_Repeat_Repost::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Email_Repeat_Repost::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Email_Repeat_Repost)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes email = 1;
  if (!this->_internal_email().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_email(), target);
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Email_Repeat_Repost)
  return target;
}

size_t Email_Repeat_Repost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Email_Repeat_Repost)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_email());
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Email_Repeat_Repost::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Email_Repeat_Repost::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Email_Repeat_Repost::GetClassData() const { return &_class_data_; }


void Email_Repeat_Repost::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Email_Repeat_Repost*>(&to_msg);
  auto& from = static_cast<const Email_Repeat_Repost&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Email_Repeat_Repost)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Email_Repeat_Repost::CopyFrom(const Email_Repeat_Repost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Email_Repeat_Repost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Email_Repeat_Repost::IsInitialized() const {
  return true;
}

void Email_Repeat_Repost::InternalSwap(Email_Repeat_Repost* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Email_Repeat_Repost::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[5]);
}

// ===================================================================

class Register_Request::_Internal {
 public:
};

Register_Request::Register_Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Register_Request)
}
Register_Request::Register_Request(const Register_Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Register_Request* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.number_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_number().empty()) {
    _this->_impl_.number_.Set(from._internal_number(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Register_Request)
}

inline void Register_Request::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.number_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.password_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.number_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.number_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Register_Request::~Register_Request() {
  // @@protoc_insertion_point(destructor:LoginMessage.Register_Request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Register_Request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.number_.Destroy();
  _impl_.email_.Destroy();
  _impl_.password_.Destroy();
}

void Register_Request::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Register_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Register_Request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.number_.ClearToEmpty();
  _impl_.email_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Register_Request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_number();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes password = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Register_Request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Register_Request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bytes number = 2;
  if (!this->_internal_number().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_number(), target);
  }

  // bytes email = 3;
  if (!this->_internal_email().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_email(), target);
  }

  // bytes password = 4;
  if (!this->_internal_password().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Register_Request)
  return target;
}

size_t Register_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Register_Request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // bytes number = 2;
  if (!this->_internal_number().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_number());
  }

  // bytes email = 3;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_email());
  }

  // bytes password = 4;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_password());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Register_Request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Register_Request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Register_Request::GetClassData() const { return &_class_data_; }


void Register_Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Register_Request*>(&to_msg);
  auto& from = static_cast<const Register_Request&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Register_Request)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_number().empty()) {
    _this->_internal_set_number(from._internal_number());
  }
  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Register_Request::CopyFrom(const Register_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Register_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Register_Request::IsInitialized() const {
  return true;
}

void Register_Request::InternalSwap(Register_Request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.number_, lhs_arena,
      &other->_impl_.number_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Register_Request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[6]);
}

// ===================================================================

class Register_Repost::_Internal {
 public:
};

Register_Repost::Register_Repost(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.Register_Repost)
}
Register_Repost::Register_Repost(const Register_Repost& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Register_Repost* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.state_ = from._impl_.state_;
  // @@protoc_insertion_point(copy_constructor:LoginMessage.Register_Repost)
}

inline void Register_Repost::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.state_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Register_Repost::~Register_Repost() {
  // @@protoc_insertion_point(destructor:LoginMessage.Register_Repost)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Register_Repost::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
}

void Register_Repost::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Register_Repost::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.Register_Repost)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.state_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Register_Repost::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Register_Repost::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.Register_Repost)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_name(), target);
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.Register_Repost)
  return target;
}

size_t Register_Repost::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.Register_Repost)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_name());
  }

  // bool state = 2;
  if (this->_internal_state() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Register_Repost::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Register_Repost::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Register_Repost::GetClassData() const { return &_class_data_; }


void Register_Repost::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Register_Repost*>(&to_msg);
  auto& from = static_cast<const Register_Repost&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.Register_Repost)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (from._internal_state() != 0) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Register_Repost::CopyFrom(const Register_Repost& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.Register_Repost)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Register_Repost::IsInitialized() const {
  return true;
}

void Register_Repost::InternalSwap(Register_Repost* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  swap(_impl_.state_, other->_impl_.state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Register_Repost::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[7]);
}

// ===================================================================

class MainMessage::_Internal {
 public:
  static const ::LoginMessage::Name_Repeat_Check& content1(const MainMessage* msg);
  static const ::LoginMessage::Name_Repeat_Repost& content2(const MainMessage* msg);
  static const ::LoginMessage::Number_Repeat_Chexk& content3(const MainMessage* msg);
  static const ::LoginMessage::Number_Repeat_Repost& content4(const MainMessage* msg);
  static const ::LoginMessage::Email_Repeat_Chexk& content5(const MainMessage* msg);
  static const ::LoginMessage::Email_Repeat_Repost& content6(const MainMessage* msg);
  static const ::LoginMessage::Register_Request& content7(const MainMessage* msg);
  static const ::LoginMessage::Register_Repost& content8(const MainMessage* msg);
};

const ::LoginMessage::Name_Repeat_Check&
MainMessage::_Internal::content1(const MainMessage* msg) {
  return *msg->_impl_.content_.content1_;
}
const ::LoginMessage::Name_Repeat_Repost&
MainMessage::_Internal::content2(const MainMessage* msg) {
  return *msg->_impl_.content_.content2_;
}
const ::LoginMessage::Number_Repeat_Chexk&
MainMessage::_Internal::content3(const MainMessage* msg) {
  return *msg->_impl_.content_.content3_;
}
const ::LoginMessage::Number_Repeat_Repost&
MainMessage::_Internal::content4(const MainMessage* msg) {
  return *msg->_impl_.content_.content4_;
}
const ::LoginMessage::Email_Repeat_Chexk&
MainMessage::_Internal::content5(const MainMessage* msg) {
  return *msg->_impl_.content_.content5_;
}
const ::LoginMessage::Email_Repeat_Repost&
MainMessage::_Internal::content6(const MainMessage* msg) {
  return *msg->_impl_.content_.content6_;
}
const ::LoginMessage::Register_Request&
MainMessage::_Internal::content7(const MainMessage* msg) {
  return *msg->_impl_.content_.content7_;
}
const ::LoginMessage::Register_Repost&
MainMessage::_Internal::content8(const MainMessage* msg) {
  return *msg->_impl_.content_.content8_;
}
void MainMessage::set_allocated_content1(::LoginMessage::Name_Repeat_Check* content1) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content1) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content1);
    if (message_arena != submessage_arena) {
      content1 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content1, submessage_arena);
    }
    set_has_content1();
    _impl_.content_.content1_ = content1;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content1)
}
void MainMessage::set_allocated_content2(::LoginMessage::Name_Repeat_Repost* content2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content2);
    if (message_arena != submessage_arena) {
      content2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content2, submessage_arena);
    }
    set_has_content2();
    _impl_.content_.content2_ = content2;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content2)
}
void MainMessage::set_allocated_content3(::LoginMessage::Number_Repeat_Chexk* content3) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content3) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content3);
    if (message_arena != submessage_arena) {
      content3 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content3, submessage_arena);
    }
    set_has_content3();
    _impl_.content_.content3_ = content3;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content3)
}
void MainMessage::set_allocated_content4(::LoginMessage::Number_Repeat_Repost* content4) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content4) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content4);
    if (message_arena != submessage_arena) {
      content4 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content4, submessage_arena);
    }
    set_has_content4();
    _impl_.content_.content4_ = content4;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content4)
}
void MainMessage::set_allocated_content5(::LoginMessage::Email_Repeat_Chexk* content5) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content5) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content5);
    if (message_arena != submessage_arena) {
      content5 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content5, submessage_arena);
    }
    set_has_content5();
    _impl_.content_.content5_ = content5;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content5)
}
void MainMessage::set_allocated_content6(::LoginMessage::Email_Repeat_Repost* content6) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content6) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content6);
    if (message_arena != submessage_arena) {
      content6 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content6, submessage_arena);
    }
    set_has_content6();
    _impl_.content_.content6_ = content6;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content6)
}
void MainMessage::set_allocated_content7(::LoginMessage::Register_Request* content7) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content7) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content7);
    if (message_arena != submessage_arena) {
      content7 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content7, submessage_arena);
    }
    set_has_content7();
    _impl_.content_.content7_ = content7;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content7)
}
void MainMessage::set_allocated_content8(::LoginMessage::Register_Repost* content8) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_content();
  if (content8) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(content8);
    if (message_arena != submessage_arena) {
      content8 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, content8, submessage_arena);
    }
    set_has_content8();
    _impl_.content_.content8_ = content8;
  }
  // @@protoc_insertion_point(field_set_allocated:LoginMessage.MainMessage.content8)
}
MainMessage::MainMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:LoginMessage.MainMessage)
}
MainMessage::MainMessage(const MainMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MainMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.type_ = from._impl_.type_;
  clear_has_content();
  switch (from.content_case()) {
    case kContent1: {
      _this->_internal_mutable_content1()->::LoginMessage::Name_Repeat_Check::MergeFrom(
          from._internal_content1());
      break;
    }
    case kContent2: {
      _this->_internal_mutable_content2()->::LoginMessage::Name_Repeat_Repost::MergeFrom(
          from._internal_content2());
      break;
    }
    case kContent3: {
      _this->_internal_mutable_content3()->::LoginMessage::Number_Repeat_Chexk::MergeFrom(
          from._internal_content3());
      break;
    }
    case kContent4: {
      _this->_internal_mutable_content4()->::LoginMessage::Number_Repeat_Repost::MergeFrom(
          from._internal_content4());
      break;
    }
    case kContent5: {
      _this->_internal_mutable_content5()->::LoginMessage::Email_Repeat_Chexk::MergeFrom(
          from._internal_content5());
      break;
    }
    case kContent6: {
      _this->_internal_mutable_content6()->::LoginMessage::Email_Repeat_Repost::MergeFrom(
          from._internal_content6());
      break;
    }
    case kContent7: {
      _this->_internal_mutable_content7()->::LoginMessage::Register_Request::MergeFrom(
          from._internal_content7());
      break;
    }
    case kContent8: {
      _this->_internal_mutable_content8()->::LoginMessage::Register_Repost::MergeFrom(
          from._internal_content8());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:LoginMessage.MainMessage)
}

inline void MainMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.type_){0}
    , decltype(_impl_.content_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_content();
}

MainMessage::~MainMessage() {
  // @@protoc_insertion_point(destructor:LoginMessage.MainMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MainMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_content()) {
    clear_content();
  }
}

void MainMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MainMessage::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:LoginMessage.MainMessage)
  switch (content_case()) {
    case kContent1: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content1_;
      }
      break;
    }
    case kContent2: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content2_;
      }
      break;
    }
    case kContent3: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content3_;
      }
      break;
    }
    case kContent4: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content4_;
      }
      break;
    }
    case kContent5: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content5_;
      }
      break;
    }
    case kContent6: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content6_;
      }
      break;
    }
    case kContent7: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content7_;
      }
      break;
    }
    case kContent8: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.content_.content8_;
      }
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CONTENT_NOT_SET;
}


void MainMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:LoginMessage.MainMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_ = 0;
  clear_content();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MainMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .LoginMessage.MessageType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::LoginMessage::MessageType>(val));
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Name_Repeat_Check content1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_content1(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Name_Repeat_Repost content2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_content2(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Number_Repeat_Chexk content3 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_content3(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Number_Repeat_Repost content4 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_content4(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Email_Repeat_Chexk content5 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_content5(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Email_Repeat_Repost content6 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_content6(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Register_Request content7 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_content7(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .LoginMessage.Register_Repost content8 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_content8(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MainMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LoginMessage.MainMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .LoginMessage.MessageType type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // .LoginMessage.Name_Repeat_Check content1 = 2;
  if (_internal_has_content1()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::content1(this),
        _Internal::content1(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Name_Repeat_Repost content2 = 3;
  if (_internal_has_content2()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::content2(this),
        _Internal::content2(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Number_Repeat_Chexk content3 = 4;
  if (_internal_has_content3()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::content3(this),
        _Internal::content3(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Number_Repeat_Repost content4 = 5;
  if (_internal_has_content4()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::content4(this),
        _Internal::content4(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Email_Repeat_Chexk content5 = 6;
  if (_internal_has_content5()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::content5(this),
        _Internal::content5(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Email_Repeat_Repost content6 = 7;
  if (_internal_has_content6()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::content6(this),
        _Internal::content6(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Register_Request content7 = 8;
  if (_internal_has_content7()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::content7(this),
        _Internal::content7(this).GetCachedSize(), target, stream);
  }

  // .LoginMessage.Register_Repost content8 = 9;
  if (_internal_has_content8()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::content8(this),
        _Internal::content8(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LoginMessage.MainMessage)
  return target;
}

size_t MainMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LoginMessage.MainMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .LoginMessage.MessageType type = 1;
  if (this->_internal_type() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  switch (content_case()) {
    // .LoginMessage.Name_Repeat_Check content1 = 2;
    case kContent1: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content1_);
      break;
    }
    // .LoginMessage.Name_Repeat_Repost content2 = 3;
    case kContent2: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content2_);
      break;
    }
    // .LoginMessage.Number_Repeat_Chexk content3 = 4;
    case kContent3: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content3_);
      break;
    }
    // .LoginMessage.Number_Repeat_Repost content4 = 5;
    case kContent4: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content4_);
      break;
    }
    // .LoginMessage.Email_Repeat_Chexk content5 = 6;
    case kContent5: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content5_);
      break;
    }
    // .LoginMessage.Email_Repeat_Repost content6 = 7;
    case kContent6: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content6_);
      break;
    }
    // .LoginMessage.Register_Request content7 = 8;
    case kContent7: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content7_);
      break;
    }
    // .LoginMessage.Register_Repost content8 = 9;
    case kContent8: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.content_.content8_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MainMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MainMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MainMessage::GetClassData() const { return &_class_data_; }


void MainMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MainMessage*>(&to_msg);
  auto& from = static_cast<const MainMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LoginMessage.MainMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  switch (from.content_case()) {
    case kContent1: {
      _this->_internal_mutable_content1()->::LoginMessage::Name_Repeat_Check::MergeFrom(
          from._internal_content1());
      break;
    }
    case kContent2: {
      _this->_internal_mutable_content2()->::LoginMessage::Name_Repeat_Repost::MergeFrom(
          from._internal_content2());
      break;
    }
    case kContent3: {
      _this->_internal_mutable_content3()->::LoginMessage::Number_Repeat_Chexk::MergeFrom(
          from._internal_content3());
      break;
    }
    case kContent4: {
      _this->_internal_mutable_content4()->::LoginMessage::Number_Repeat_Repost::MergeFrom(
          from._internal_content4());
      break;
    }
    case kContent5: {
      _this->_internal_mutable_content5()->::LoginMessage::Email_Repeat_Chexk::MergeFrom(
          from._internal_content5());
      break;
    }
    case kContent6: {
      _this->_internal_mutable_content6()->::LoginMessage::Email_Repeat_Repost::MergeFrom(
          from._internal_content6());
      break;
    }
    case kContent7: {
      _this->_internal_mutable_content7()->::LoginMessage::Register_Request::MergeFrom(
          from._internal_content7());
      break;
    }
    case kContent8: {
      _this->_internal_mutable_content8()->::LoginMessage::Register_Repost::MergeFrom(
          from._internal_content8());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MainMessage::CopyFrom(const MainMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LoginMessage.MainMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainMessage::IsInitialized() const {
  return true;
}

void MainMessage::InternalSwap(MainMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.type_, other->_impl_.type_);
  swap(_impl_.content_, other->_impl_.content_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata MainMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_MyEngineMessage_2eproto_getter, &descriptor_table_MyEngineMessage_2eproto_once,
      file_level_metadata_MyEngineMessage_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace LoginMessage
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::LoginMessage::Name_Repeat_Check*
Arena::CreateMaybeMessage< ::LoginMessage::Name_Repeat_Check >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Name_Repeat_Check >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Name_Repeat_Repost*
Arena::CreateMaybeMessage< ::LoginMessage::Name_Repeat_Repost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Name_Repeat_Repost >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Number_Repeat_Chexk*
Arena::CreateMaybeMessage< ::LoginMessage::Number_Repeat_Chexk >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Number_Repeat_Chexk >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Number_Repeat_Repost*
Arena::CreateMaybeMessage< ::LoginMessage::Number_Repeat_Repost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Number_Repeat_Repost >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Email_Repeat_Chexk*
Arena::CreateMaybeMessage< ::LoginMessage::Email_Repeat_Chexk >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Email_Repeat_Chexk >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Email_Repeat_Repost*
Arena::CreateMaybeMessage< ::LoginMessage::Email_Repeat_Repost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Email_Repeat_Repost >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Register_Request*
Arena::CreateMaybeMessage< ::LoginMessage::Register_Request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Register_Request >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::Register_Repost*
Arena::CreateMaybeMessage< ::LoginMessage::Register_Repost >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::Register_Repost >(arena);
}
template<> PROTOBUF_NOINLINE ::LoginMessage::MainMessage*
Arena::CreateMaybeMessage< ::LoginMessage::MainMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::LoginMessage::MainMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
